//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("JourListDM", "RecurrenceIntervalGoal", "RecurrenceInterval", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.RecurrenceInterval), "Goal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Goal))]
[assembly: EdmRelationshipAttribute("JourListDM", "JournalAccomplishment", "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Journal), "Accomplishment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Accomplishment))]
[assembly: EdmRelationshipAttribute("JourListDM", "GoalAccomplishment", "Goal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Goal), "Accomplishment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Accomplishment))]
[assembly: EdmRelationshipAttribute("JourListDM", "InventoryActionInventoryLog", "InventoryAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.InventoryAction), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.InventoryLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "JournalActivityLog", "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Journal), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.ActivityLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "ActivityActivityLog", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Activity), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.ActivityLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "UnitTypeUnit", "UnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.UnitType), "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Unit))]
[assembly: EdmRelationshipAttribute("JourListDM", "UnitActivityLog", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Unit), "ActivityLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.ActivityLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "UnitTypeItem", "UnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.UnitType), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Item))]
[assembly: EdmRelationshipAttribute("JourListDM", "ItemCategoryItem", "ItemCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.ItemCategory), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Item))]
[assembly: EdmRelationshipAttribute("JourListDM", "InventoryInventoryLog", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Inventory), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.InventoryLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "ActivityGoal", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Activity), "Goal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Goal))]
[assembly: EdmRelationshipAttribute("JourListDM", "ItemInventory", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Item), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Inventory))]
[assembly: EdmRelationshipAttribute("JourListDM", "MemberGoal", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Member), "Goal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Goal))]
[assembly: EdmRelationshipAttribute("JourListDM", "MemberJournal", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Member), "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Journal))]
[assembly: EdmRelationshipAttribute("JourListDM", "MemberPersonalItem", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Member), "PersonalItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.PersonalItem))]
[assembly: EdmRelationshipAttribute("JourListDM", "MemberInventory", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Member), "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Inventory))]
[assembly: EdmRelationshipAttribute("JourListDM", "ItemItemInfo", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Item), "ItemInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.ItemInfo))]
[assembly: EdmRelationshipAttribute("JourListDM", "ItemInfoInventoryLog", "ItemInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JourList.Models.ItemInfo), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.InventoryLog))]
[assembly: EdmRelationshipAttribute("JourListDM", "InventoryShoppingList", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Inventory), "ShoppingList", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JourList.Models.ShoppingList))]
[assembly: EdmRelationshipAttribute("JourListDM", "InventoryUnit", "Inventory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Inventory), "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Unit))]
[assembly: EdmRelationshipAttribute("JourListDM", "UnitTypeUnit1", "UnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JourList.Models.UnitType), "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(JourList.Models.Unit))]
[assembly: EdmRelationshipAttribute("JourListDM", "UnitInventoryLog", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Unit), "InventoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.InventoryLog), true)]
[assembly: EdmRelationshipAttribute("JourListDM", "ActivityUnit", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(JourList.Models.Activity), "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(JourList.Models.Unit))]

#endregion

namespace JourList.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JourListDMContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JourListDMContainer object using the connection string found in the 'JourListDMContainer' section of the application configuration file.
        /// </summary>
        public JourListDMContainer() : base("name=JourListDMContainer", "JourListDMContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JourListDMContainer object.
        /// </summary>
        public JourListDMContainer(string connectionString) : base(connectionString, "JourListDMContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JourListDMContainer object.
        /// </summary>
        public JourListDMContainer(EntityConnection connection) : base(connection, "JourListDMContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Journal> Journals
        {
            get
            {
                if ((_Journals == null))
                {
                    _Journals = base.CreateObjectSet<Journal>("Journals");
                }
                return _Journals;
            }
        }
        private ObjectSet<Journal> _Journals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryLog> InventoryLogs
        {
            get
            {
                if ((_InventoryLogs == null))
                {
                    _InventoryLogs = base.CreateObjectSet<InventoryLog>("InventoryLogs");
                }
                return _InventoryLogs;
            }
        }
        private ObjectSet<InventoryLog> _InventoryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InventoryAction> InventoryActions
        {
            get
            {
                if ((_InventoryActions == null))
                {
                    _InventoryActions = base.CreateObjectSet<InventoryAction>("InventoryActions");
                }
                return _InventoryActions;
            }
        }
        private ObjectSet<InventoryAction> _InventoryActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Activity> Activities
        {
            get
            {
                if ((_Activities == null))
                {
                    _Activities = base.CreateObjectSet<Activity>("Activities");
                }
                return _Activities;
            }
        }
        private ObjectSet<Activity> _Activities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecurrenceInterval> RecurrenceIntervals
        {
            get
            {
                if ((_RecurrenceIntervals == null))
                {
                    _RecurrenceIntervals = base.CreateObjectSet<RecurrenceInterval>("RecurrenceIntervals");
                }
                return _RecurrenceIntervals;
            }
        }
        private ObjectSet<RecurrenceInterval> _RecurrenceIntervals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Accomplishment> Accomplishments
        {
            get
            {
                if ((_Accomplishments == null))
                {
                    _Accomplishments = base.CreateObjectSet<Accomplishment>("Accomplishments");
                }
                return _Accomplishments;
            }
        }
        private ObjectSet<Accomplishment> _Accomplishments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityLog> ActivityLogs
        {
            get
            {
                if ((_ActivityLogs == null))
                {
                    _ActivityLogs = base.CreateObjectSet<ActivityLog>("ActivityLogs");
                }
                return _ActivityLogs;
            }
        }
        private ObjectSet<ActivityLog> _ActivityLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitType> UnitTypes
        {
            get
            {
                if ((_UnitTypes == null))
                {
                    _UnitTypes = base.CreateObjectSet<UnitType>("UnitTypes");
                }
                return _UnitTypes;
            }
        }
        private ObjectSet<UnitType> _UnitTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemCategory> ItemCategories
        {
            get
            {
                if ((_ItemCategories == null))
                {
                    _ItemCategories = base.CreateObjectSet<ItemCategory>("ItemCategories");
                }
                return _ItemCategories;
            }
        }
        private ObjectSet<ItemCategory> _ItemCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inventory> Inventories
        {
            get
            {
                if ((_Inventories == null))
                {
                    _Inventories = base.CreateObjectSet<Inventory>("Inventories");
                }
                return _Inventories;
            }
        }
        private ObjectSet<Inventory> _Inventories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Goal> Goals
        {
            get
            {
                if ((_Goals == null))
                {
                    _Goals = base.CreateObjectSet<Goal>("Goals");
                }
                return _Goals;
            }
        }
        private ObjectSet<Goal> _Goals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemInfo> ItemInfoes
        {
            get
            {
                if ((_ItemInfoes == null))
                {
                    _ItemInfoes = base.CreateObjectSet<ItemInfo>("ItemInfoes");
                }
                return _ItemInfoes;
            }
        }
        private ObjectSet<ItemInfo> _ItemInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShoppingList> ShoppingLists
        {
            get
            {
                if ((_ShoppingLists == null))
                {
                    _ShoppingLists = base.CreateObjectSet<ShoppingList>("ShoppingLists");
                }
                return _ShoppingLists;
            }
        }
        private ObjectSet<ShoppingList> _ShoppingLists;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Journals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJournals(Journal journal)
        {
            base.AddObject("Journals", journal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryLogs(InventoryLog inventoryLog)
        {
            base.AddObject("InventoryLogs", inventoryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InventoryActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventoryActions(InventoryAction inventoryAction)
        {
            base.AddObject("InventoryActions", inventoryAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Activities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivities(Activity activity)
        {
            base.AddObject("Activities", activity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecurrenceIntervals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecurrenceIntervals(RecurrenceInterval recurrenceInterval)
        {
            base.AddObject("RecurrenceIntervals", recurrenceInterval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accomplishments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccomplishments(Accomplishment accomplishment)
        {
            base.AddObject("Accomplishments", accomplishment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityLogs(ActivityLog activityLog)
        {
            base.AddObject("ActivityLogs", activityLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitTypes(UnitType unitType)
        {
            base.AddObject("UnitTypes", unitType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemCategories(ItemCategory itemCategory)
        {
            base.AddObject("ItemCategories", itemCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inventories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInventories(Inventory inventory)
        {
            base.AddObject("Inventories", inventory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Goals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoals(Goal goal)
        {
            base.AddObject("Goals", goal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemInfoes(ItemInfo itemInfo)
        {
            base.AddObject("ItemInfoes", itemInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShoppingLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShoppingLists(ShoppingList shoppingList)
        {
            base.AddObject("ShoppingLists", shoppingList);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Accomplishment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Accomplishment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Accomplishment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Accomplishment CreateAccomplishment(global::System.Int64 id)
        {
            Accomplishment accomplishment = new Accomplishment();
            accomplishment.Id = id;
            return accomplishment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes = "";
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "JournalAccomplishment", "Journal")]
        public Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalAccomplishment", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalAccomplishment", "Journal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalAccomplishment", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Journal>("JourListDM.JournalAccomplishment", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "GoalAccomplishment", "Goal")]
        public Goal Goal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goal>("JourListDM.GoalAccomplishment", "Goal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goal>("JourListDM.GoalAccomplishment", "Goal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Goal> GoalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goal>("JourListDM.GoalAccomplishment", "Goal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Goal>("JourListDM.GoalAccomplishment", "Goal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Activity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Activity CreateActivity(global::System.Int64 id, global::System.String description)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.Description = description;
            return activity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points = 0;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity = 0D;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityActivityLog", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("JourListDM.ActivityActivityLog", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("JourListDM.ActivityActivityLog", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityGoal", "Goal")]
        public EntityCollection<Goal> Goals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goal>("JourListDM.ActivityGoal", "Goal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goal>("JourListDM.ActivityGoal", "Goal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityUnit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.ActivityUnit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.ActivityUnit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.ActivityUnit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("JourListDM.ActivityUnit", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="ActivityLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ActivityLog CreateActivityLog(global::System.Int64 id)
        {
            ActivityLog activityLog = new ActivityLog();
            activityLog.Id = id;
            return activityLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes = "";
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity = 0D;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hyperlink
        {
            get
            {
                return _Hyperlink;
            }
            set
            {
                OnHyperlinkChanging(value);
                ReportPropertyChanging("Hyperlink");
                _Hyperlink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hyperlink");
                OnHyperlinkChanged();
            }
        }
        private global::System.String _Hyperlink = "";
        partial void OnHyperlinkChanging(global::System.String value);
        partial void OnHyperlinkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "JournalActivityLog", "Journal")]
        public Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalActivityLog", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalActivityLog", "Journal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("JourListDM.JournalActivityLog", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Journal>("JourListDM.JournalActivityLog", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityActivityLog", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityActivityLog", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityActivityLog", "Activity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityActivityLog", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("JourListDM.ActivityActivityLog", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitActivityLog", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitActivityLog", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitActivityLog", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitActivityLog", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("JourListDM.UnitActivityLog", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Goal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Goal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Goal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateBegin">Initial value of the DateBegin property.</param>
        /// <param name="dateEnd">Initial value of the DateEnd property.</param>
        public static Goal CreateGoal(global::System.Int64 id, global::System.DateTime dateBegin, global::System.DateTime dateEnd)
        {
            Goal goal = new Goal();
            goal.Id = id;
            goal.DateBegin = dateBegin;
            goal.DateEnd = dateEnd;
            return goal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateBegin
        {
            get
            {
                return _DateBegin;
            }
            set
            {
                OnDateBeginChanging(value);
                ReportPropertyChanging("DateBegin");
                _DateBegin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBegin");
                OnDateBeginChanged();
            }
        }
        private global::System.DateTime _DateBegin;
        partial void OnDateBeginChanging(global::System.DateTime value);
        partial void OnDateBeginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private global::System.DateTime _DateEnd;
        partial void OnDateEndChanging(global::System.DateTime value);
        partial void OnDateEndChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "RecurrenceIntervalGoal", "RecurrenceInterval")]
        public RecurrenceInterval RecurrenceInterval
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurrenceInterval>("JourListDM.RecurrenceIntervalGoal", "RecurrenceInterval").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurrenceInterval>("JourListDM.RecurrenceIntervalGoal", "RecurrenceInterval").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecurrenceInterval> RecurrenceIntervalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecurrenceInterval>("JourListDM.RecurrenceIntervalGoal", "RecurrenceInterval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecurrenceInterval>("JourListDM.RecurrenceIntervalGoal", "RecurrenceInterval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "GoalAccomplishment", "Accomplishment")]
        public EntityCollection<Accomplishment> Accomplishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Accomplishment>("JourListDM.GoalAccomplishment", "Accomplishment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Accomplishment>("JourListDM.GoalAccomplishment", "Accomplishment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityGoal", "Activity")]
        public Activity Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityGoal", "Activity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityGoal", "Activity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Activity> ActivityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Activity>("JourListDM.ActivityGoal", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Activity>("JourListDM.ActivityGoal", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberGoal", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberGoal", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberGoal", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberGoal", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("JourListDM.MemberGoal", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Inventory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inventory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inventory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Inventory CreateInventory(global::System.Int64 id)
        {
            Inventory inventory = new Inventory();
            inventory.Id = id;
            return inventory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OnHand
        {
            get
            {
                return _OnHand;
            }
            set
            {
                OnOnHandChanging(value);
                ReportPropertyChanging("OnHand");
                _OnHand = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnHand");
                OnOnHandChanged();
            }
        }
        private global::System.Double _OnHand = 0D;
        partial void OnOnHandChanging(global::System.Double value);
        partial void OnOnHandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RequiredQuantity
        {
            get
            {
                return _RequiredQuantity;
            }
            set
            {
                OnRequiredQuantityChanging(value);
                ReportPropertyChanging("RequiredQuantity");
                _RequiredQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredQuantity");
                OnRequiredQuantityChanged();
            }
        }
        private global::System.Double _RequiredQuantity = 0D;
        partial void OnRequiredQuantityChanging(global::System.Double value);
        partial void OnRequiredQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RestockThreshold
        {
            get
            {
                return _RestockThreshold;
            }
            set
            {
                OnRestockThresholdChanging(value);
                ReportPropertyChanging("RestockThreshold");
                _RestockThreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestockThreshold");
                OnRestockThresholdChanged();
            }
        }
        private global::System.Double _RestockThreshold = -1D;
        partial void OnRestockThresholdChanging(global::System.Double value);
        partial void OnRestockThresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("JourListDM.InventoryInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("JourListDM.InventoryInventoryLog", "InventoryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemInventory", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemInventory", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemInventory", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemInventory", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("JourListDM.ItemInventory", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberInventory", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberInventory", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberInventory", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberInventory", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("JourListDM.MemberInventory", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryShoppingList", "ShoppingList")]
        public ShoppingList ShoppingList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShoppingList>("JourListDM.InventoryShoppingList", "ShoppingList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShoppingList>("JourListDM.InventoryShoppingList", "ShoppingList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShoppingList> ShoppingListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShoppingList>("JourListDM.InventoryShoppingList", "ShoppingList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShoppingList>("JourListDM.InventoryShoppingList", "ShoppingList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryUnit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.InventoryUnit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.InventoryUnit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.InventoryUnit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("JourListDM.InventoryUnit", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="InventoryAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static InventoryAction CreateInventoryAction(global::System.Int32 id, global::System.String description)
        {
            InventoryAction inventoryAction = new InventoryAction();
            inventoryAction.Id = id;
            inventoryAction.Description = description;
            return inventoryAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryActionInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("JourListDM.InventoryActionInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("JourListDM.InventoryActionInventoryLog", "InventoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="InventoryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InventoryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InventoryLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="cost">Initial value of the Cost property.</param>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        public static InventoryLog CreateInventoryLog(global::System.Int64 id, global::System.DateTime transactionDate, global::System.Double quantity, global::System.Double cost, global::System.Int32 unitId)
        {
            InventoryLog inventoryLog = new InventoryLog();
            inventoryLog.Id = id;
            inventoryLog.TransactionDate = transactionDate;
            inventoryLog.Quantity = quantity;
            inventoryLog.Cost = cost;
            inventoryLog.UnitId = unitId;
            return inventoryLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private global::System.Double _Cost;
        partial void OnCostChanging(global::System.Double value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Double _Size = 0D;
        partial void OnSizeChanging(global::System.Double value);
        partial void OnSizeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryActionInventoryLog", "InventoryAction")]
        public InventoryAction InventoryAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryAction>("JourListDM.InventoryActionInventoryLog", "InventoryAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryAction>("JourListDM.InventoryActionInventoryLog", "InventoryAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InventoryAction> InventoryActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InventoryAction>("JourListDM.InventoryActionInventoryLog", "InventoryAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InventoryAction>("JourListDM.InventoryActionInventoryLog", "InventoryAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryInventoryLog", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryInventoryLog", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryInventoryLog", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryInventoryLog", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("JourListDM.InventoryInventoryLog", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemInfoInventoryLog", "ItemInfo")]
        public ItemInfo ItemInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemInfo>("JourListDM.ItemInfoInventoryLog", "ItemInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemInfo>("JourListDM.ItemInfoInventoryLog", "ItemInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemInfo> ItemInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemInfo>("JourListDM.ItemInfoInventoryLog", "ItemInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemInfo>("JourListDM.ItemInfoInventoryLog", "ItemInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitInventoryLog", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitInventoryLog", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitInventoryLog", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitInventoryLog", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("JourListDM.UnitInventoryLog", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(PersonalItem))]
    [KnownTypeAttribute(typeof(StandardItem))]
    public abstract partial class Item : EntityObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitTypeItem", "UnitType")]
        public UnitType UnitType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeItem", "UnitType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeItem", "UnitType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitType> UnitTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeItem", "UnitType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitType>("JourListDM.UnitTypeItem", "UnitType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemCategoryItem", "ItemCategory")]
        public ItemCategory ItemCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("JourListDM.ItemCategoryItem", "ItemCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("JourListDM.ItemCategoryItem", "ItemCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemCategory> ItemCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemCategory>("JourListDM.ItemCategoryItem", "ItemCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemCategory>("JourListDM.ItemCategoryItem", "ItemCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("JourListDM.ItemInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("JourListDM.ItemInventory", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemItemInfo", "ItemInfo")]
        public EntityCollection<ItemInfo> ItemInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemInfo>("JourListDM.ItemItemInfo", "ItemInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemInfo>("JourListDM.ItemItemInfo", "ItemInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="ItemCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static ItemCategory CreateItemCategory(global::System.Int32 id, global::System.String description)
        {
            ItemCategory itemCategory = new ItemCategory();
            itemCategory.Id = id;
            itemCategory.Description = description;
            return itemCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemCategoryItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("JourListDM.ItemCategoryItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("JourListDM.ItemCategoryItem", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="ItemInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemInfo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static ItemInfo CreateItemInfo(global::System.Int64 id, global::System.String quantity)
        {
            ItemInfo itemInfo = new ItemInfo();
            itemInfo.Id = id;
            itemInfo.Quantity = quantity;
            return itemInfo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.String _Barcode = "";
        partial void OnBarcodeChanging(global::System.String value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Hyperlink
        {
            get
            {
                return _Hyperlink;
            }
            set
            {
                OnHyperlinkChanging(value);
                ReportPropertyChanging("Hyperlink");
                _Hyperlink = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Hyperlink");
                OnHyperlinkChanged();
            }
        }
        private global::System.String _Hyperlink = "";
        partial void OnHyperlinkChanging(global::System.String value);
        partial void OnHyperlinkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.String _Quantity;
        partial void OnQuantityChanging(global::System.String value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Brand
        {
            get
            {
                return _Brand;
            }
            set
            {
                OnBrandChanging(value);
                ReportPropertyChanging("Brand");
                _Brand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Brand");
                OnBrandChanged();
            }
        }
        private global::System.String _Brand = "";
        partial void OnBrandChanging(global::System.String value);
        partial void OnBrandChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemItemInfo", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemItemInfo", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemItemInfo", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("JourListDM.ItemItemInfo", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("JourListDM.ItemItemInfo", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ItemInfoInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("JourListDM.ItemInfoInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("JourListDM.ItemInfoInventoryLog", "InventoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Journal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="entryDate">Initial value of the EntryDate property.</param>
        /// <param name="encrypted">Initial value of the Encrypted property.</param>
        public static Journal CreateJournal(global::System.Int64 id, global::System.DateTime entryDate, global::System.Boolean encrypted)
        {
            Journal journal = new Journal();
            journal.Id = id;
            journal.EntryDate = entryDate;
            journal.Encrypted = encrypted;
            return journal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Story
        {
            get
            {
                return _Story;
            }
            set
            {
                OnStoryChanging(value);
                ReportPropertyChanging("Story");
                _Story = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Story");
                OnStoryChanged();
            }
        }
        private global::System.String _Story = "";
        partial void OnStoryChanging(global::System.String value);
        partial void OnStoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 HeartRate
        {
            get
            {
                return _HeartRate;
            }
            set
            {
                OnHeartRateChanging(value);
                ReportPropertyChanging("HeartRate");
                _HeartRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HeartRate");
                OnHeartRateChanged();
            }
        }
        private global::System.Int16 _HeartRate = 0;
        partial void OnHeartRateChanging(global::System.Int16 value);
        partial void OnHeartRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Int16 _Weight = 0;
        partial void OnWeightChanging(global::System.Int16 value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private global::System.DateTime _EntryDate;
        partial void OnEntryDateChanging(global::System.DateTime value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Encrypted
        {
            get
            {
                return _Encrypted;
            }
            set
            {
                OnEncryptedChanging(value);
                ReportPropertyChanging("Encrypted");
                _Encrypted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Encrypted");
                OnEncryptedChanged();
            }
        }
        private global::System.Boolean _Encrypted;
        partial void OnEncryptedChanging(global::System.Boolean value);
        partial void OnEncryptedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "JournalAccomplishment", "Accomplishment")]
        public EntityCollection<Accomplishment> Accomplishments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Accomplishment>("JourListDM.JournalAccomplishment", "Accomplishment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Accomplishment>("JourListDM.JournalAccomplishment", "Accomplishment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "JournalActivityLog", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("JourListDM.JournalActivityLog", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("JourListDM.JournalActivityLog", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberJournal", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberJournal", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberJournal", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberJournal", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("JourListDM.MemberJournal", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Member CreateMember(global::System.Int64 id, global::System.Guid userId, global::System.String name)
        {
            Member member = new Member();
            member.Id = id;
            member.UserId = userId;
            member.Name = name;
            return member;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberGoal", "Goal")]
        public EntityCollection<Goal> Goals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goal>("JourListDM.MemberGoal", "Goal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goal>("JourListDM.MemberGoal", "Goal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberJournal", "Journal")]
        public EntityCollection<Journal> Journals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("JourListDM.MemberJournal", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("JourListDM.MemberJournal", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberPersonalItem", "PersonalItem")]
        public EntityCollection<PersonalItem> PersonalItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonalItem>("JourListDM.MemberPersonalItem", "PersonalItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonalItem>("JourListDM.MemberPersonalItem", "PersonalItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberInventory", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("JourListDM.MemberInventory", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("JourListDM.MemberInventory", "Inventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="PersonalItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonalItem : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonalItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static PersonalItem CreatePersonalItem(global::System.Int64 id, global::System.String description)
        {
            PersonalItem personalItem = new PersonalItem();
            personalItem.Id = id;
            personalItem.Description = description;
            return personalItem;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "MemberPersonalItem", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberPersonalItem", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberPersonalItem", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("JourListDM.MemberPersonalItem", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("JourListDM.MemberPersonalItem", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="RecurrenceInterval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecurrenceInterval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecurrenceInterval object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static RecurrenceInterval CreateRecurrenceInterval(global::System.Int32 id, global::System.String description)
        {
            RecurrenceInterval recurrenceInterval = new RecurrenceInterval();
            recurrenceInterval.Id = id;
            recurrenceInterval.Description = description;
            return recurrenceInterval;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Minutes
        {
            get
            {
                return _Minutes;
            }
            set
            {
                OnMinutesChanging(value);
                ReportPropertyChanging("Minutes");
                _Minutes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Minutes");
                OnMinutesChanged();
            }
        }
        private global::System.Int64 _Minutes = 0;
        partial void OnMinutesChanging(global::System.Int64 value);
        partial void OnMinutesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "RecurrenceIntervalGoal", "Goal")]
        public EntityCollection<Goal> Goals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goal>("JourListDM.RecurrenceIntervalGoal", "Goal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goal>("JourListDM.RecurrenceIntervalGoal", "Goal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="ShoppingList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShoppingList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShoppingList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ShoppingList CreateShoppingList(global::System.Guid id)
        {
            ShoppingList shoppingList = new ShoppingList();
            shoppingList.Id = id;
            return shoppingList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean InCart
        {
            get
            {
                return _InCart;
            }
            set
            {
                OnInCartChanging(value);
                ReportPropertyChanging("InCart");
                _InCart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InCart");
                OnInCartChanged();
            }
        }
        private global::System.Boolean _InCart = false;
        partial void OnInCartChanging(global::System.Boolean value);
        partial void OnInCartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double QuantityNeeded
        {
            get
            {
                return _QuantityNeeded;
            }
            set
            {
                OnQuantityNeededChanging(value);
                ReportPropertyChanging("QuantityNeeded");
                _QuantityNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuantityNeeded");
                OnQuantityNeededChanged();
            }
        }
        private global::System.Double _QuantityNeeded = 1D;
        partial void OnQuantityNeededChanging(global::System.Double value);
        partial void OnQuantityNeededChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SizeNeeded
        {
            get
            {
                return _SizeNeeded;
            }
            set
            {
                OnSizeNeededChanging(value);
                ReportPropertyChanging("SizeNeeded");
                _SizeNeeded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeNeeded");
                OnSizeNeededChanged();
            }
        }
        private global::System.Double _SizeNeeded = 0D;
        partial void OnSizeNeededChanging(global::System.Double value);
        partial void OnSizeNeededChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryShoppingList", "Inventory")]
        public Inventory Inventory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryShoppingList", "Inventory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryShoppingList", "Inventory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inventory> InventoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inventory>("JourListDM.InventoryShoppingList", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inventory>("JourListDM.InventoryShoppingList", "Inventory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="StandardItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StandardItem : Item
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StandardItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static StandardItem CreateStandardItem(global::System.Int64 id, global::System.String description)
        {
            StandardItem standardItem = new StandardItem();
            standardItem.Id = id;
            standardItem.Description = description;
            return standardItem;
        }

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="conversionFactor">Initial value of the ConversionFactor property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        public static Unit CreateUnit(global::System.Int32 id, global::System.String description, global::System.Double conversionFactor, global::System.String abbreviation)
        {
            Unit unit = new Unit();
            unit.Id = id;
            unit.Description = description;
            unit.ConversionFactor = conversionFactor;
            unit.Abbreviation = abbreviation;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ConversionFactor
        {
            get
            {
                return _ConversionFactor;
            }
            set
            {
                OnConversionFactorChanging(value);
                ReportPropertyChanging("ConversionFactor");
                _ConversionFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversionFactor");
                OnConversionFactorChanged();
            }
        }
        private global::System.Double _ConversionFactor;
        partial void OnConversionFactorChanging(global::System.Double value);
        partial void OnConversionFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitTypeUnit", "UnitType")]
        public UnitType UnitType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeUnit", "UnitType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeUnit", "UnitType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitType> UnitTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("JourListDM.UnitTypeUnit", "UnitType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitType>("JourListDM.UnitTypeUnit", "UnitType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitActivityLog", "ActivityLog")]
        public EntityCollection<ActivityLog> ActivityLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ActivityLog>("JourListDM.UnitActivityLog", "ActivityLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ActivityLog>("JourListDM.UnitActivityLog", "ActivityLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "InventoryUnit", "Inventory")]
        public EntityCollection<Inventory> Inventories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inventory>("JourListDM.InventoryUnit", "Inventory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inventory>("JourListDM.InventoryUnit", "Inventory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitInventoryLog", "InventoryLog")]
        public EntityCollection<InventoryLog> InventoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InventoryLog>("JourListDM.UnitInventoryLog", "InventoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InventoryLog>("JourListDM.UnitInventoryLog", "InventoryLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "ActivityUnit", "Activity")]
        public EntityCollection<Activity> Activities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("JourListDM.ActivityUnit", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("JourListDM.ActivityUnit", "Activity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="JourListDM", Name="UnitType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static UnitType CreateUnitType(global::System.Int32 id, global::System.String description)
        {
            UnitType unitType = new UnitType();
            unitType.Id = id;
            unitType.Description = description;
            return unitType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active = true;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitTypeUnit", "Unit")]
        public EntityCollection<Unit> Units
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Unit>("JourListDM.UnitTypeUnit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Unit>("JourListDM.UnitTypeUnit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitTypeItem", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("JourListDM.UnitTypeItem", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("JourListDM.UnitTypeItem", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("JourListDM", "UnitTypeUnit1", "Unit")]
        public Unit DefaultUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitTypeUnit1", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitTypeUnit1", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> DefaultUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("JourListDM.UnitTypeUnit1", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("JourListDM.UnitTypeUnit1", "Unit", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}

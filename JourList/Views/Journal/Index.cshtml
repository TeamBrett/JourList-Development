@model JourList.Models.JournalModel

@{
    ViewBag.Title = "Today";
}

@*<h2>Today</h2>*@

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="http://crypto-js.googlecode.com/svn/tags/3.0/build/rollups/aes.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.decrypted = false;
        //var decrypted = false;

        $("#passphrase").change(function () {
            decrypt();
        });

        //Prepare jtable plugin
        $('#EntryDate').datepicker({
            onSelect: function (dateText, el) {
                // Check for save on current date if anything has changed.
                $('#ActivityLogTable').jtable('load', { Day: dateText });
                $('#AccomplishmentTable').jtable('load', { Day: dateText });
                $('#ActivityTable').jtable('load', { Day: dateText });
                $('#GoalTable').jtable('load', { Day: dateText });
                $.ajax({
                    url: '/Journal/GetEntry',
                    type: 'POST',
                    dataType: 'json',
                    data: { date: dateText },
                    async: true,
                    // on completion assigned the returned list of <label,value> data to the autocomplete's data list
                    success: function (data) {
                        if (data.Result != "OK") {
                            alert("Add Error:" + data.Message);
                        }
                        else {
                            // Write out the next item
                            $.each(data.Records, function (key, value) {
                                $('[name=' + key + ']', '#EntryForm').val(value);
                            });
                            decrypt();
                        };
                    },
                    error: function () { alert("Error Searching"); }
                })
            }
        });
        $('#RemoveEncryption').click(function(event,data){
            var iscrypt = $('#Encrypted').val();
            if(iscrypt == false || iscrypt.toLowerCase() == 'false'){
                alert("There exists no encryption here");
                return;
            };
            // make sure we have the right password
            decrypt();
            var story = $('#Story').val();
            var pstory = $('#PlainStory').val();
            
            // There is a story and it's been decrypted
            if( story != "" && pstory != ""){
                $.decrypted = true;
                $('#Story').val(pstory);
                $('#Encrypted').val(false);
                $('#Save').click();
                $('#EncryptionPanel').hide();
                $('#passphrase').val("");
            }
            else{
                // Prompt for password or cancel
            };
        });
        $('#ManageEncryption').click(function(event,data){
            //var iscrypt = $('#Encrypted').val();
            // If it's already encrypted and the message has been decrypted
            var iscrypt = $('#Encrypted').val();
            if ((iscrypt == true || iscrypt.toLowerCase() == 'true') && $.decrypted == false) {
                $('#PasswordForm [name=password2]').hide();
                $('#PasswordForm').dialog('open');
            }
            else{
                $('#PasswordForm [name=password2]').show();
                $('#PasswordForm').dialog('open');
            };
        });
        function decrypt() {
            // Variables
            var iscrypt = $('#Encrypted').val();
            var story = $('#Story').val();
            var pass = $('#passphrase').val();
            var crypt = "";
            
            // Set all statuses to decrypted
            $.decrypted = false;
            $('#EncryptionStatus').text("Encrypted");
            $('#EncryptionStatus').css('color', 'Red');
            $('#ChangePassword').toggle(false);

            // If the underlying story is indeed encrypted
            if (iscrypt == true || iscrypt.toLowerCase() == 'true') {
                crypt = CryptoJS.AES.decrypt(story, pass).toString(CryptoJS.enc.Utf8);
            }
            else {
                crypt = story;
            };
            if (crypt != "") {
                $.decrypted = true;
                $('#EncryptionStatus').text("Decrypted");
                $('#EncryptionStatus').css('color', 'Green');
                $('#ChangePassword').toggle(true);
            };
            $('#PlainStory').val(crypt);
        }
        $("#Save").click(function (data, event) {
            var estory = $('Story').val();
            if ($.decrypted == false && estory != "") {
                alert("This entry is encrypted");
                return false;
            };
            var pass = $('#passphrase').val();
            var story = $('#PlainStory').val();
            var iscrypt = $('#Encrypted').val();
            if (iscrypt == true || iscrypt.toLowerCase() == 'true') {
                var crypt = CryptoJS.AES.encrypt(story, pass);
                $('#Story').val(crypt);
            };
            $.ajax({
                url: '/Journal/Save',   //this.action,
                type: 'POST',
                data: $('#EntryForm').serializeObject(),
                dataType: 'json',
                async: true,
                // on completion assigned the returned list of <label,value> data to the autocomplete's data list
                success: function (data) {
                    if (data.Result != "OK") {
                        alert("Add Error:" + data.Message);
                    }
                    else {
                        $('JourId').val(data.Records.JourId);
                        alert("Successfully saved");
                    }
                },
                error:
                    function (event, data) {
                        alert(data.Message);
                    }
            });
            // Make the story readable again.
            // Cancel normal submit
            return false;
        });
        $('#PasswordForm').dialog({
            autoOpen: false,
            //            height: 150,
            //            width: 300,
            modal: true,
            buttons: {
                "Save": function () {
                    var iscrypt = $('#Encrypted').val();
                    /*if ((iscrypt == true || iscrypt.toLowerCase() == 'true') && $.decrypted == false) {
                        alert("You need to have had decrypted the entry first");
                    }
                    else {*/
                        // If only one password field is shown, don't compare
                        // Set the new password in teh passphrase box
                        var hiddenEls = $(this).find(":hidden").not("script");
                        if(hiddenEls.length == 0){
                            // Compare the new passwords to make sure they match
                            if ($('#PasswordForm [name=password1]').val() != $('#PasswordForm [name=password2]').val()) {
                                alert("You need to have had decrypted the entry first");
                                return;
                            }
                        };
                        $('#passphrase').val($('#PasswordForm [name="password1"]').val());
                        decrypt();
                        $.decrypted = true;
                        $('#Encrypted').val(true);
                        $('#EncryptionPanel').show();
                        if(hiddenEls.length == 0){
                            $('#Save').click();
                        };
                    //};
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
        
        $('#ChangePassword').click(function(){
            $('#PasswordForm').dialog('open');
        });

        if ($('#Encrypted').val() == true || $('#Encrypted').val().toLowerCase() == 'true') {
            $('#PasswordForm [name=password2]').hide();
            $('#PasswordForm').dialog('open');
        }
        else{
            $('#PlainStory').val($('#Story').val());
        };  
    });
</script>
<script type ="text/javascript">
    $(document).ready(function () {

        $("#ActivityForm").dialog({
            autoOpen: false,
            height: 600,
            width: 600,
            modal: true,
            buttons: {
                "Record Activity": function () {
                    $('#ActivityLogTable').jtable('addRecord', { record:
                        {
                            ActId: $('#ActId').val(),
                            JourId: $('#JourId').val(),
                            Description: $('#Description').val(),
                            Quantity: $('#Quantity').val(),
                            Hyperlink: $('#Hyperlink').val(),
                            Notes: $('#Notes').val(),
                            // TODO: See if we can just use UnitId instead of sUnitId
                            UnitId: $('#sUnitId').val()
                        }
                    });
                    $(this).dialog("close");
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });
    });
</script>
<script type ="text/javascript">
    $(document).ready(function () {
        //Prepare jtable plugin
        $('#ActivityTable').jtable({
            columnSelectable: false,
            selecting: true, //Enable selecting
            multiselect: false, //Allow multiple selecting
            title: 'Activities',
            actions: {
                listAction: '/Journal/PopularActivities'
            },
            fields: {
                ActId: {
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                Description: {
                    title: 'Description',
                    width: '60%',
                    edit: false
                },
                Points: {
                    title: 'Points',
                    list: true,
                    edit: false,
                    width: '10%',
                    defaultValue: '0'
                }
            }
            , selectionChanged: function () {
                var $selectedRows = $('#ActivityTable').jtable('selectedRows');
                $selectedRows.each(function () {
                    var data = $(this).data('record');
                    //Get all selected rows
                    $.ajax({
                        url: '/Journal/GetActivity',
                        type: 'POST',
                        dataType: 'json',
                        data: { 'ActId': data.Id },
                        async: true,
                        success: function (data) {
                            $('#ActivityForm').html(data.Records);
                            $('#ActivityForm').dialog('open');
                        },
                        error: function () { alert("Error retrieving activity"); }
                    });
                });
            }
        });

        //Load activity list from server
        $('#ActivityTable').jtable('load');
    });

</script>
<script type ="text/javascript">
    $(document).ready(function () {
        //Prepare jtable plugin
        $('#ActivityLogTable').jtable({
            columnSelectable: false,
            selecting: true,
            multiselect: false,
            title: 'Activity Log',
            actions: {
                listAction: '/Journal/GetActivityLogs',
                updateAction: '/Journal/UpdateActivityLog',
                createAction: '/Journal/CreateActivityLog',
                deleteAction: '/Journal/DeleteActivityLog'
            },
            fields: {
                ActId: {
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                LogId: {
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                Description: {
                    title: 'Description',
                    width: '15%',
                    edit: false
                },
                Notes: {
                    title: 'Notes',
                    width: '20%',
                    edit: true
                },
                TotalPoints: {
                    title: 'Points',
                    list: true,
                    edit: false,
                    width: '10%',
                    defaultValue: '0'
                },
                Quantity: {
                    title: 'Quantity',
                    width: '10%',
                    edit: true
                },
                UnitId: {
                    title: 'Unit',
                    list: true,
                    edit: true,
                    width: '10%',
                    defaultValue: '0',
                    options: '/Options/Units',
                    input: function (data) {
                        if (data.record) {
                            var s = '<select class id="Edit-UnitId" name="UnitId">';
                            $.each(data.record.UnitList, function (index, option) {
                                s = s + '<option value="' + option.Value + '" ';
                                if (option.Value == data.record.UnitId)
                                    s = s + ' selected="selected" ';
                                s = s + '>' + option.Text + '</option>';
                            });
                            s = s + '</select>';
                            return s;
                        }
                    }
                },
                Hyperlink: {
                    title: 'Hyperlink',
                    width: '10%',
                    list: false,
                    edit: true
                }
            }
            , recordAdded: function (event, data) {
                $('#ActivityTable').jtable('load');
            }
            , recordUpdated: function (event, data) {
                // TODO: Use jQuery to better select this element
                // &(data.row).children
                data.row[0].children[2].textContent = data.serverResponse.Records.TotalPoints;
            }
            , recordDeleted: function (event, data) {
                $('#ActivityTable').jtable('load');
            }
        });
        $('#ActivityLogTable').jtable('load', { Day: '@(Model.EntryDate)' });
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#accordian")
		.accordion({
		    header: "> div > h3",
		    fillSpace: true
		})
		.sortable({
		    axis: "y",
		    handle: "h3",
		    stop: function (event, ui) {
		        // IE doesn't register the blur when sorting
		        // so trigger focusout handlers to remove .ui-state-focus
		        ui.item.children("h3").triggerHandler("focusout");
		    }
		});
        $("#accordianlog")
		.accordion({
		    header: "> div > h3"
		})
		.sortable({
		    axis: "y",
		    handle: "h3",
		    stop: function (event, ui) {
		        // IE doesn't register the blur when sorting
		        // so trigger focusout handlers to remove .ui-state-focus
		        ui.item.children("h3").triggerHandler("focusout");
		    }
		});
    });
</script>

<div style="height: 750px;">
    <div style="float: left; width: 78%;">
    @using (Html.BeginForm("Save", "Journal", FormMethod.Post, new { id = "EntryForm" }))
    {
            @Html.ValidationSummary(true)
            <fieldset>
                <legend>Dear Journal</legend>
        
                @Html.HiddenFor(model => model.JourId)

                <div class="editor-label">
                    @Html.LabelFor(model => model.EntryDate)
                </div>
                <div class="editor-field">
                    @Html.TextBox("EntryDate", Model.EntryDate)
                    @Html.ValidationMessageFor(model => model.EntryDate)
                </div>
                <div id="StatusBar" style="float: left; width:100%;">
                    <div id="ManageEncryption" style="float: left; color: White; background: grey; border-color: yellow; border-style: solid double">Codify</div>
                    <div id="Save" style="float: left; color: White; background: grey; border-color: yellow; border-style: solid double">Save</div>
                    <div id="EncryptionPanel" hidden="hidden">
                        <div id="RemoveEncryption"style="float: left; color: Blue; background: grey; border-color: yellow; border-style: solid double">No Code</div>
                        <label id="EncryptionStatus" style="color: Red">Encrypted</label>

                        @Html.HiddenFor(model => model.Encrypted)
                        <input type="password" id="passphrase" hidden="hidden"/>
                    </div>
                    @*<button id="ChangePassword" hidden="hidden">Change Password</button>*@
                    @*@Html.CheckBoxFor(model => model.Encrypted, new { style="hidden: hidden"})*@
                    <span style="float:right;">TOTAL POINTS: <label id="DayPoints">120</label></span> 
                </div>

                <div class="editor-label" style="clear: left;">
                    @Html.LabelFor(model => model.Story)
                </div>
                <div class="editor-field" style="float: left">
                    @Html.HiddenFor(model => model.Story)
                    @Html.TextArea("PlainStory","",15,100,null)
                    @Html.ValidationMessageFor(model => model.Story)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Weight)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(z => z.Weight)
                    @Html.ValidationMessageFor(model => model.Weight)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.HeartRate)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(z => z.HeartRate)
                    @Html.ValidationMessageFor(model => model.Weight)
                </div>

                <p>
                    @*<input type="hidden" id="Save"/>*@
                </p>
            </fieldset>
        }

        <div id="accordianlog" style="width: 100%; float: left; clear: left; height: auto;">
	        <div class="group">
		        <h3><a href="#">Activities</a></h3>
	            <div id="ActivityLogTable"  ></div>
            </div>
            <div class="group">
                <h3><a href="#">Goals</a></h3>
                <div id="AccomplishmentTable"></div>
            </div>
        </div>
    </div>

    <div id="accordian" style="width: 20%; float: left; padding-left:10px;   ">
	    <div class="group">
		    <h3><a href="#">Activities</a></h3>
	        <div id="ActivityTable"  ></div>
        </div>
        <div class="group">
            <h3><a href="#">Goals</a></h3>
            <div id="GoalTable"></div>
        </div>
    </div>

</div>
<div id="ActivityForm" title="Do it"></div>
<div id="PasswordForm" title="You password sir?">
    <input name="password1" type="password" />
    <input name="password2" type="password"/>
</div>
